% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{model-method-compile}
\alias{model-method-compile}
\title{Compile a Stan program or get the Stan code}
\description{
The \verb{$compile()} method of a \code{\link{CmdStanModel}} object calls
CmdStan to translate a Stan program to C++ and create a compiled
executable. The resulting files are placed in the same directory as the
Stan program associated with the \code{CmdStanModel} object. After compilation
the path to the executable can be accesed via the \verb{$exe_file()} method.
}
\section{Usage}{
\preformatted{$compile(
  quiet = TRUE,
  include_paths = NULL,
  threads = FALSE,
  opencl = FALSE,
  opencl_platform_id = 0,
  opencl_device_id = 0,
  compiler_flags = NULL,
  force_recompile = FALSE
)
$exe_file()
}
}

\section{Arguments}{

Leaving all arguments at their defaults should be fine for most users, but
optional arguments are provided to enable features in CmdStan (and the Stan
Math library). See the CmdStan manual for more details.
\itemize{
\item \code{quiet}: (logical) Should the verbose output from CmdStan during
compilation be suppressed? The default is \code{TRUE}, but if you encounter an
error we recommend trying again with \code{quiet=FALSE} to see more of the
output.
\item \code{include_paths}: (character vector) Paths to directories where Stan should
look for files specified in \verb{#include} directives in the Stan program.
\item \code{stanc_options}: (character vector) Any Stan-to-C++ transpiler options to be
used when compiling the model.
\item \code{force_recompile}: (logical) Should the model be recompiled
even if was not modified since last compiled. The default is \code{FALSE}.
}
}

\section{Value}{
 This method is called for its side effect of creating the
executable and adding its path to the \code{\link{CmdStanModel}} object, but it also
returns the \code{\link{CmdStanModel}} object invisibly.
}

\examples{
\dontrun{
stan_program <- file.path(cmdstan_path(), "examples/bernoulli/bernoulli.stan")
mod <- cmdstan_model(stan_program, compile = FALSE)
mod$compile()
mod$exe_file()
}

}
\seealso{
The CmdStanR website (\href{https://mc-stan.org/cmdstanr/}{mc-stan.org/cmdstanr})
for online documentation and tutorials.

The Stan and CmdStan documentation:
\itemize{
\item Stan doc (html or pdf): \href{https://mc-stan.org/users/documentation/}{mc-stan.org/users/documentation/}
\item CmdStan doc (pdf): (\href{https://github.com/stan-dev/cmdstan/releases/latest}{github.com/stan-dev/cmdstan/releases/}).
}

Other CmdStanModel methods: 
\code{\link{model-method-optimize}},
\code{\link{model-method-sample}},
\code{\link{model-method-variational}}
}
\concept{CmdStanModel methods}
